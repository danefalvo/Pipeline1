trigger:
- master

variables:
- name: BuildConfiguration
  value: Development

- name: PackageID
  value: MyExampleProj.csproj

- name: ConnectedSvcName
  value: danefalvo octopus app

- name: OctoSpace
  value: Default

- name: OctoProject
  value: Azure Pipeline

- name: system.debug
  value: true

pool:
  vmImage: 'windows-2019'

steps:

- task: OctoInstaller@4
  inputs:
    version: '*'
    
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: 'runtime'
    version: '3.1.x'



- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(PackageID)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(PackageID)'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: false

- task: OctopusPack@4
  inputs:
    PackageId: '$(PackageID)'
    PackageFormat: 'NuPkg'
    PackageVersion: '$(Build.BuildNumber)'
    SourcePath: '$(build.artifactstagingdirectory)'
    OutputPath: '$(build.stagingdirectory)'
    NuGetTitle: '$(PackageID)'
    NuGetDescription: 'Development of $(PackageID)'
    NuGetReleaseNotes: '$(Build.SourceVersionMessage)'
    Overwrite: true
    ListFiles: true
    AdditionalArguments: '--title=new title'

        
- task: OctopusMetadata@4
  inputs:
    OctoConnectedServiceName: '$(ConnectedSvcName)'
    Space: '$(OctoSpace)'
    PackageId: '$(PackageID)'
    PackageVersion: '$(Build.BuildNumber)'
    Replace: 'false'


- task: OctopusPush@4
  inputs:
    OctoConnectedServiceName: '$(ConnectedSvcName)'
    Space: '$(OctoSpace)'
    Package: '$(build.stagingdirectory)/*.nupkg'
    Replace: 'true'



- task: OctopusCreateRelease@4
  inputs:
    OctoConnectedServiceName: '$(ConnectedSvcName)'
    Space: '$(OctoSpace)'
    ProjectName: '$(OctoProject)'
    ReleaseNumber: '$(Build.BuildNumber)'
